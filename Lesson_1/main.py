#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

def sanitized_input(invite_message, error_message, value_type=int):
    while True:
        try:
            value = value_type(input(invite_message))
            return value
        except ValueError:
            print(error_message)


# 1. Поработайте с переменными, создайте несколько, выведите на экран, запросите у
# пользователя несколько чисел и строк и сохраните в переменные, выведите на экран.
def case_1():
    a, b, c = 1, 1, 3
    print(f"{a} + {b} != {c}")
    count = sanitized_input("А я могу и несколько строк запомнить. Сколько введешь? --> ",
                            "Нееее, я число строк спросил.")
    strings = []
    for idx in range(count):
        strings.append(input("Ввод строки {idx}: "))
    print("Итак, я запомнил. Смотри:")
    for idx, string in enumerate(strings):
        print(f"Строка {idx}:", string)


# 2. Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды
# и выведите в формате чч:мм:сс. Используйте форматирование строк.
def case_2():
    seconds = sanitized_input("Введите количество секунд --> ", "Кол-во секунд пишется цифрами")
    print(f"{seconds // 3600:02}:{seconds // 60 % 60:02}:{seconds % 60:02}")


# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn.
# Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
def case_3():
    n = sanitized_input("Введите число --> ",
                        "Ну числооооо... Циферки... Уже третье задание же, а до сих пор непонятно...")
    result = int(f"{n}") + int(f"{n}{n}") + int(f"{n}{n}{n}")
    print(f"Результат: {n}+{n}{n}+{n}{n}{n}={result}")


# 4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе.
# Для решения используйте цикл while и арифметические операции.
def case_4():
    n = sanitized_input("Введите число --> ",
                        "ЧИСЛО!! https://ru.wikipedia.org/wiki/Число")
    max_digit = 0
    while n > 0:
        if n % 10 > max_digit:
            max_digit = n % 10
        n = n // 10
    print("Максимальная цифра в числе:", max_digit)


# 5. Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым
# результатом работает фирма (прибыль — выручка больше издержек, или убыток — издержки больше выручки).
# Выведите соответствующее сообщение. Если фирма отработала с прибылью, вычислите рентабельность выручки
# (соотношение прибыли к выручке). Далее запросите численность сотрудников фирмы и определите прибыль
# фирмы в расчете на одного сотрудника.
def case_5():
    proceed = sanitized_input("Введите выручку фирмы --> ",
                              "Выручка... Это как деньги, только нормальное количество. И тоже цифрами",
                              float)
    costs = sanitized_input("Введите издержки фирмы --> ",
                            "Пфффф. В могилу сведёте. Догадаешься, где ошибка? Может цифры использовать стоит?",
                            float)
    if proceed > costs:
        print(f"Фирма отработала с прибылью {proceed-costs:.2f} у.е.")
        print(f"А рентабельность составила {(proceed-costs)*100/proceed}%")
        employees_count = sanitized_input("А персонала какое количество? ",
                                          "Эх. Цифрами. Это тоже цифрами ввести надо. Причём целыми")
        print(f"Таким образом, на каждого сотрудника приходится {(proceed-costs)/employees_count:.2f} у.е. прибыли")
    elif proceed < costs:
        print(f"Фирма отработала с убытком.")
    else:
        print("Отработали в ноль. Потрясно. Никому денег не достанется...")


# 6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего. Требуется определить
# номер дня, на который результат спортсмена составит не менее b километров. Программа должна принимать
# значения параметров a и b и выводить одно натуральное число — номер дня.
def case_6():
    a = sanitized_input("Введите начальную длину пробежки --> ",
                        "Ну тут даже дробное число можно указать... И это всё равно сложно?",
                        float)
    b = sanitized_input("Введите конечную длину пробежки --> ",
                        "Я в недоумении. То есть начальную длину пробежки ввели, а конечную не можем?",
                        float)
    final_day = 1
    while a < b:
        final_day += 1
        a *= 1.1
    print(f"Желаемая цель будет достигнута на {final_day} день.")


if __name__ == '__main__':
    print("Задание 1\n\n")
    case_1()
    print("Задание 2\n\n")
    case_2()
    print("Задание 3\n\n")
    case_3()
    print("Задание 4\n\n")
    case_4()
    print("Задание 5\n\n")
    case_5()
    print("Задание 6\n\n")
    case_6()
